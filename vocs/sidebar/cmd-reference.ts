import { SidebarItem } from "vocs";

export const cmdReference: SidebarItem[] = [
      {
        text: 'Environment',
        link: '/reference/cheatcodes/environment',
        collapsed: true,
        items: [
          { text: 'warp', link: '/reference/cheatcodes/warp' },
          { text: 'roll', link: '/reference/cheatcodes/roll' },
          { text: 'fee', link: '/reference/cheatcodes/fee' },
          { text: 'getBlockTimestamp', link: '/reference/cheatcodes/get-block-timestamp' },
          { text: 'getBlockNumber', link: '/reference/cheatcodes/get-block-number' },
          { text: 'difficulty', link: '/reference/cheatcodes/difficulty' },
          { text: 'prevrandao', link: '/reference/cheatcodes/prevrandao' },
          { text: 'chainId', link: '/reference/cheatcodes/chain-id' },
          { text: 'store', link: '/reference/cheatcodes/store' },
          { text: 'load', link: '/reference/cheatcodes/load' },
          { text: 'etch', link: '/reference/cheatcodes/etch' },
          { text: 'deal', link: '/reference/cheatcodes/deal' },
          { text: 'prank', link: '/reference/cheatcodes/prank' },
          { text: 'startPrank', link: '/reference/cheatcodes/start-prank' },
          { text: 'stopPrank', link: '/reference/cheatcodes/stop-prank' },
          { text: 'readCallers', link: '/reference/cheatcodes/read-callers' },
          { text: 'record', link: '/reference/cheatcodes/record' },
          { text: 'accesses', link: '/reference/cheatcodes/accesses' },
          { text: 'recordLogs', link: '/reference/cheatcodes/record-logs' },
          { text: 'getRecordedLogs', link: '/reference/cheatcodes/get-recorded-logs' },
          { text: 'setNonce', link: '/reference/cheatcodes/set-nonce' },
          { text: 'getNonce', link: '/reference/cheatcodes/get-nonce' },
          { text: 'mockCall', link: '/reference/cheatcodes/mock-call' },
          { text: 'mockCalls', link: '/reference/cheatcodes/mock-calls' },
          { text: 'mockCallRevert', link: '/reference/cheatcodes/mock-call-revert' },
          { text: 'mockFunction', link: '/reference/cheatcodes/mock-function' },
          { text: 'clearMockedCalls', link: '/reference/cheatcodes/clear-mocked-calls' },
          { text: 'coinbase', link: '/reference/cheatcodes/coinbase' },
          { text: 'broadcast', link: '/reference/cheatcodes/broadcast' },
          { text: 'startBroadcast', link: '/reference/cheatcodes/start-broadcast' },
          { text: 'stopBroadcast', link: '/reference/cheatcodes/stop-broadcast' },
          { text: 'pauseGasMetering', link: '/reference/cheatcodes/pause-gas-metering' },
          { text: 'resetGasMetering', link: '/reference/cheatcodes/reset-gas-metering' },
          { text: 'resumeGasMetering', link: '/reference/cheatcodes/resume-gas-metering' },
          { text: 'txGasPrice', link: '/reference/cheatcodes/tx-gas-price' },
          { text: 'startStateDiffRecording', link: '/reference/cheatcodes/start-state-diff-recording' },
          { text: 'stopAndReturnStateDiff', link: '/reference/cheatcodes/stop-and-return-state-diff' },
          { text: 'snapshotState', link: '/reference/cheatcodes/state-snapshots' },
          { text: 'snapshotGas', link: '/reference/cheatcodes/gas-snapshots' },
          { text: 'isContext', link: '/reference/cheatcodes/is-context' },
        ],
      },
      {
        text: 'Assertions',
        link: '/reference/cheatcodes/assertions',
        collapsed: true,
        items: [
          { text: 'expectRevert', link: '/reference/cheatcodes/expect-revert' },
          { text: 'expectEmit', link: '/reference/cheatcodes/expect-emit' },
          { text: 'expectCall', link: '/reference/cheatcodes/expect-call' },
        ],
      },
      {
        text: 'Fuzzer',
        link: '/reference/cheatcodes/fuzzer',
        collapsed: true,
        items: [
          { text: 'assume', link: '/reference/cheatcodes/assume' },
          { text: 'assumeNoRevert', link: '/reference/cheatcodes/assume-no-revert' },
        ],
      },
      {
        text: 'Forking',
        link: '/reference/cheatcodes/forking',
        collapsed: true,
        items: [
          { text: 'createFork', link: '/reference/cheatcodes/create-fork' },
          { text: 'selectFork', link: '/reference/cheatcodes/select-fork' },
          { text: 'createSelectFork', link: '/reference/cheatcodes/create-select-fork' },
          { text: 'activeFork', link: '/reference/cheatcodes/active-fork' },
          { text: 'rollFork', link: '/reference/cheatcodes/roll-fork' },
          { text: 'makePersistent', link: '/reference/cheatcodes/make-persistent' },
          { text: 'revokePersistent', link: '/reference/cheatcodes/revoke-persistent' },
          { text: 'isPersistent', link: '/reference/cheatcodes/is-persistent' },
          { text: 'allowCheatcodes', link: '/reference/cheatcodes/allow-cheatcodes' },
          { text: 'transact', link: '/reference/cheatcodes/transact' },
        ],
      },
      {
        text: 'External',
        link: '/reference/cheatcodes/external',
        collapsed: true,
        items: [
          { text: 'ffi', link: '/reference/cheatcodes/ffi' },
          { text: 'prompt', link: '/reference/cheatcodes/prompt' },
          { text: 'projectRoot', link: '/reference/cheatcodes/project-root' },
          { text: 'getCode', link: '/reference/cheatcodes/get-code' },
          { text: 'getDeployedCode', link: '/reference/cheatcodes/get-deployed-code' },
          { text: 'sleep', link: '/reference/cheatcodes/sleep' },
          { text: 'unixTime', link: '/reference/cheatcodes/unix-time' },
          { text: 'setEnv', link: '/reference/cheatcodes/set-env' },
          { text: 'envOr', link: '/reference/cheatcodes/env-or' },
          { text: 'envBool', link: '/reference/cheatcodes/env-bool' },
          { text: 'envUint', link: '/reference/cheatcodes/env-uint' },
          { text: 'envInt', link: '/reference/cheatcodes/env-int' },
          { text: 'envAddress', link: '/reference/cheatcodes/env-address' },
          { text: 'envBytes32', link: '/reference/cheatcodes/env-bytes32' },
          { text: 'envString', link: '/reference/cheatcodes/env-string' },
          { text: 'envBytes', link: '/reference/cheatcodes/env-bytes' },
          { text: 'keyExists', link: '/reference/cheatcodes/key-exists' },
          { text: 'keyExistsJson', link: '/reference/cheatcodes/key-exists-json' },
          { text: 'keyExistsToml', link: '/reference/cheatcodes/key-exists-toml' },
          { text: 'parseJson', link: '/reference/cheatcodes/parse-json' },
          { text: 'parseToml', link: '/reference/cheatcodes/parse-toml' },
          { text: 'parseJsonKeys', link: '/reference/cheatcodes/parse-json-keys' },
          { text: 'parseTomlKeys', link: '/reference/cheatcodes/parse-toml-keys' },
          { text: 'serializeJson', link: '/reference/cheatcodes/serialize-json' },
          { text: 'writeJson', link: '/reference/cheatcodes/write-json' },
          { text: 'writeToml', link: '/reference/cheatcodes/write-toml' },
        ],
      },
      {
        text: 'Signing',
        link: '/reference/cheatcodes/signing',
        collapsed: true,
        items: [
          { text: 'sign', link: '/reference/cheatcodes/sign' },
          { text: 'signDelegation', link: '/reference/cheatcodes/sign-delegation' },
        ],
      },
      {
        text: 'Utilities',
        link: '/reference/cheatcodes/utilities',
        collapsed: true,
        items: [
          { text: 'addr', link: '/reference/cheatcodes/addr' },
          { text: 'skip', link: '/reference/cheatcodes/skip' },
          { text: 'label', link: '/reference/cheatcodes/label' },
          { text: 'getLabel', link: '/reference/cheatcodes/get-label' },
          { text: 'deriveKey', link: '/reference/cheatcodes/derive-key' },
          { text: 'parseBytes', link: '/reference/cheatcodes/parse-bytes' },
          { text: 'parseAddress', link: '/reference/cheatcodes/parse-address' },
          { text: 'parseUint', link: '/reference/cheatcodes/parse-uint' },
          { text: 'parseInt', link: '/reference/cheatcodes/parse-int' },
          { text: 'parseBytes32', link: '/reference/cheatcodes/parse-bytes32' },
          { text: 'parseBool', link: '/reference/cheatcodes/parse-bool' },
          { text: 'rememberKey', link: '/reference/cheatcodes/remember-key' },
          { text: 'toString', link: '/reference/cheatcodes/to-string' },
          { text: 'breakpoint', link: '/reference/cheatcodes/breakpoint' },
          { text: 'createWallet', link: '/reference/cheatcodes/create-wallet' },
          { text: 'copyStorage', link: '/reference/cheatcodes/copy-storage' },
          { text: 'setArbitraryStorage', link: '/reference/cheatcodes/set-arbitrary-storage' },
        ],
      },
      { text: 'RPC', link: '/reference/cheatcodes/rpc' },
      { text: 'Files', link: '/reference/cheatcodes/fs' },
  {
    text: 'Forge-Std Reference',
    collapsed: true,
    items: [
      { text: 'Std Logs', link: '/reference/forge-std/std-logs' },
      {
        text: 'Std Assertions',
        link: '/reference/forge-std/std-assertions',
        items: [
          { text: 'fail', link: '/reference/forge-std/fail' },
          { text: 'assertTrue', link: '/reference/forge-std/assertTrue' },
          { text: 'assertFalse', link: '/reference/forge-std/assertFalse' },
          { text: 'assertEq', link: '/reference/forge-std/assertEq' },
          { text: 'assertEqDecimal', link: '/reference/forge-std/assertEqDecimal' },
          { text: 'assertNotEq', link: '/reference/forge-std/assertNotEq' },
          { text: 'assertNotEqDecimal', link: '/reference/forge-std/assertNotEqDecimal' },
          { text: 'assertLt', link: '/reference/forge-std/assertLt' },
          { text: 'assertLtDecimal', link: '/reference/forge-std/assertLtDecimal' },
          { text: 'assertGt', link: '/reference/forge-std/assertGt' },
          { text: 'assertGtDecimal', link: '/reference/forge-std/assertGtDecimal' },
          { text: 'assertLe', link: '/reference/forge-std/assertLe' },
          { text: 'assertLeDecimal', link: '/reference/forge-std/assertLeDecimal' },
          { text: 'assertGe', link: '/reference/forge-std/assertGe' },
          { text: 'assertGeDecimal', link: '/reference/forge-std/assertGeDecimal' },
          { text: 'assertApproxEqAbs', link: '/reference/forge-std/assertApproxEqAbs' },
          { text: 'assertApproxEqAbsDecimal', link: '/reference/forge-std/assertApproxEqAbsDecimal' },
          { text: 'assertApproxEqRel', link: '/reference/forge-std/assertApproxEqRel' },
          { text: 'assertApproxEqRelDecimal', link: '/reference/forge-std/assertApproxEqRelDecimal' },
        ],
      },
      {
        text: 'Std Cheats',
        link: '/reference/forge-std/std-cheats',
        items: [
          { text: 'skip', link: '/reference/forge-std/skip' },
          { text: 'rewind', link: '/reference/forge-std/rewind' },
          { text: 'hoax', link: '/reference/forge-std/hoax' },
          { text: 'startHoax', link: '/reference/forge-std/startHoax' },
          { text: 'deal', link: '/reference/forge-std/deal' },
          { text: 'deployCode', link: '/reference/forge-std/deployCode' },
          { text: 'deployCodeTo', link: '/reference/forge-std/deployCodeTo' },
          { text: 'bound', link: '/reference/forge-std/bound' },
          { text: 'changePrank', link: '/reference/forge-std/change-prank' },
          { text: 'makeAddr', link: '/reference/forge-std/make-addr' },
          { text: 'makeAddrAndKey', link: '/reference/forge-std/make-addr-and-key' },
          { text: 'noGasMetering', link: '/reference/forge-std/noGasMetering' },
          { text: 'assumeNoPrecompiles', link: '/reference/forge-std/assume-no-precompiles' },
          { text: 'assumePayable', link: '/reference/forge-std/assume-payable' },
        ],
      },
      {
        text: 'Std Errors',
        link: '/reference/forge-std/std-errors',
        items: [
          { text: 'assertionError', link: '/reference/forge-std/assertionError' },
          { text: 'arithmeticError', link: '/reference/forge-std/arithmeticError' },
          { text: 'divisionError', link: '/reference/forge-std/divisionError' },
          { text: 'enumConversionError', link: '/reference/forge-std/enumConversionError' },
          { text: 'encodeStorageError', link: '/reference/forge-std/encodeStorageError' },
          { text: 'popError', link: '/reference/forge-std/popError' },
          { text: 'indexOOBError', link: '/reference/forge-std/indexOOBError' },
          { text: 'memOverflowError', link: '/reference/forge-std/memOverflowError' },
          { text: 'zeroVarError', link: '/reference/forge-std/zeroVarError' },
        ],
      },
      {
        text: 'Std Storage',
        link: '/reference/forge-std/std-storage',
        items: [
          { text: 'target', link: '/reference/forge-std/target' },
          { text: 'sig', link: '/reference/forge-std/sig' },
          { text: 'with_key', link: '/reference/forge-std/with_key' },
          { text: 'depth', link: '/reference/forge-std/depth' },
          { text: 'enable_packed_slots', link: '/reference/forge-std/enable_packed_slots' },
          { text: 'checked_write', link: '/reference/forge-std/checked_write' },
          { text: 'find', link: '/reference/forge-std/find' },
          { text: 'read', link: '/reference/forge-std/read' },
        ],
      },
      {
        text: 'Std Math',
        link: '/reference/forge-std/std-math',
        items: [
          { text: 'abs', link: '/reference/forge-std/abs' },
          { text: 'delta', link: '/reference/forge-std/delta' },
          { text: 'percentDelta', link: '/reference/forge-std/percentDelta' },
        ],
      },
      {
        text: 'Script Utils',
        link: '/reference/forge-std/script-utils',
        items: [
          { text: 'computeCreateAddress', link: '/reference/forge-std/compute-create-address' },
          { text: 'deriveRememberKey', link: '/reference/forge-std/derive-remember-key' },
        ],
      },
      { text: 'Console Logging', link: '/reference/forge-std/console-log' },
    ],
  },
  {
    text: 'DSTest Reference',
    link: '/reference/ds-test',
  },
];